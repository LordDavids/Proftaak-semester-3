name: CI for Fontys_solutions userapi

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Super-linter
        uses: super-linter/super-linter@v7.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LANGUAGE: "java,javascript,typescript,xml"
          LINTER_RULES_PATH: .
          JAVA_FILE_NAME: checkstyle.xml
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_JAVA: true
          VALIDATE_GITLEAKS: true
          
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: 
          - User
        environment: 
          - user_api
        include:
          - api: User
            environment: user_api

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'
        cache: maven

    - name: Clean, compile, and run tests
      run: mvn -B clean verify --file "${{ matrix.api }}/pom.xml"
      
    - name: Build application
      run: mvn -B clean package --file "${{ matrix.api }}/pom.xml"

            # Check if JAR file was created
  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api:
          - User  
        
    steps:    
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      # Build Docker Image based on matrix 'api'
      - name: Build Docker image for ${{ matrix.api }}
        run: |
          docker build ./${{ matrix.api }} -t davidsteile/fontys_solutions:v1
          
      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push davidsteile/fontys_solutions:v1
